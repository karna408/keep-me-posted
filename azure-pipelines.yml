trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  PYTHON_VERSION: '3.6'

# Postgresql for test
services:
    postgres:
      image: 'circleci/postgres:9.6.5-alpine-ram'
      ports:
      - '5432:5432'
      env:
        POSTGRES_USER: ubuntu
        POSTGRES_DB: circle_test
        POSTGRES_PASSWORD: ""

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(PYTHON_VERSION)'
    architecture: 'x64'

- task: PythonScript@0
  displayName: 'Export project path'
  inputs:
    scriptSource: 'inline'
    script: |
      """Search all subdirectories for `manage.py`."""
      from glob import iglob
      from os import path
      # Python >= 3.5
      manage_py = next(iglob(path.join('**', 'manage.py'), recursive=True), None)
      if not manage_py:
          raise SystemExit('Could not find a Flask project')
      project_location = path.dirname(path.abspath(manage_py))
      print('Found Flask project in', project_location)
      print('##vso[task.setvariable variable=projectRoot]{}'.format(project_location))

- script: |
    python -m pip install --upgrade pip setuptools wheel
    pip install -r requirements/dev.txt
    pip install unittest-xml-reporting
  displayName: 'Install prerequisites'

- script: |
    pushd '$(projectRoot)'
    python manage.py test
  env:
    FLASK_CONFIG: 'testing'
    TEST_DATABASE_URL: 'postgresql://ubuntu@localhost/circle_test?sslmode=disable'
  displayName: 'Run tests'

- script: |
    docker build -t t-app .
  displayName: Docker image build

- task: PublishTestResults@2
  inputs:
    testResultsFiles: "**/TEST-*.xml"
    testRunTitle: 'Python $(PYTHON_VERSION)'
  condition: succeededOrFailed()
